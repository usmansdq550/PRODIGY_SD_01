import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class TASK1Prodigy {


    // Conversion methods
    public static double celsiusToFahrenheit(double celsius) {
        return (celsius * 9 / 5) + 32;
    }

    public static double celsiusToKelvin(double celsius) {
        return celsius + 273.15;
    }

    public static double fahrenheitToCelsius(double fahrenheit) {
        return (fahrenheit - 32) * 5 / 9;
    }

    public static double fahrenheitToKelvin(double fahrenheit) {
        return (fahrenheit - 32) * 5 / 9 + 273.15;
    }

    public static double kelvinToCelsius(double kelvin) {
        return kelvin - 273.15;
    }

    public static double kelvinToFahrenheit(double kelvin) {
        return (kelvin - 273.15) * 9 / 5 + 32;
    }

    public static void main(String[] args) {
        // Create the frame (main window)
        JFrame frame = new JFrame("Temperature Converter");
        frame.setSize(400, 350);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setLayout(new GridBagLayout()); // Use GridBagLayout for flexibility
        GridBagConstraints gbc = new GridBagConstraints();
        
        // Set padding for all components
        gbc.insets = new Insets(10, 10, 10, 10);
        
        // Create the panel and set a background color
        JPanel panel = new JPanel();
        panel.setBackground(new Color(60, 63, 65));
        panel.setLayout(new GridBagLayout());

        // Title label
        JLabel titleLabel = new JLabel("Temperature Converter");
        titleLabel.setFont(new Font("Arial", Font.BOLD, 18));
        titleLabel.setForeground(Color.WHITE);
        gbc.gridwidth = 2; // Span across two columns
        gbc.gridx = 0;
        gbc.gridy = 0;
        panel.add(titleLabel, gbc);

        // Label for temperature input
        JLabel tempLabel = new JLabel("Enter Temperature:");
        tempLabel.setForeground(Color.WHITE);
        gbc.gridwidth = 1;
        gbc.gridx = 0;
        gbc.gridy = 1;
        panel.add(tempLabel, gbc);

        // Text field for entering temperature
        JTextField tempField = new JTextField(10);
        gbc.gridx = 1;
        gbc.gridy = 1;
        panel.add(tempField, gbc);

        // Label for selecting unit
        JLabel unitLabel = new JLabel("Select Unit:");
        unitLabel.setForeground(Color.WHITE);
        gbc.gridx = 0;
        gbc.gridy = 2;
        panel.add(unitLabel, gbc);

        // Dropdown menu for selecting the unit
        String[] units = {"Celsius", "Fahrenheit", "Kelvin"};
        JComboBox<String> unitBox = new JComboBox<>(units);
        gbc.gridx = 1;
        gbc.gridy = 2;
        panel.add(unitBox, gbc);

        // Button for conversion
        JButton convertButton = new JButton("Convert");
        convertButton.setBackground(new Color(0, 123, 255));
        convertButton.setForeground(Color.WHITE);
        convertButton.setFocusPainted(false);
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.gridwidth = 2; // Span across two columns
        panel.add(convertButton, gbc);

        // Text area for showing the result
        JTextArea resultArea = new JTextArea(3, 20);
        resultArea.setEditable(false);
        resultArea.setLineWrap(true);
        resultArea.setWrapStyleWord(true);
        resultArea.setForeground(Color.BLACK);
        resultArea.setBackground(Color.LIGHT_GRAY);
        JScrollPane scrollPane = new JScrollPane(resultArea); // Scroll if text overflows
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.gridwidth = 2;
        panel.add(scrollPane, gbc);

        // Add panel to frame
        frame.add(panel);

        // ActionListener for the convert button
        convertButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    // Get the input temperature and unit
                    double temperature = Double.parseDouble(tempField.getText());
                    String unit = (String) unitBox.getSelectedItem();

                    // Perform conversions based on the unit selected
                    if (unit.equals("Celsius")) {
                        resultArea.setText(temperature + " Celsius is:\n" +
                                String.format("%.2f", celsiusToFahrenheit(temperature)) + " Fahrenheit\n" +
                                String.format("%.2f", celsiusToKelvin(temperature)) + " Kelvin");
                    } else if (unit.equals("Fahrenheit")) {
                        resultArea.setText(temperature + " Fahrenheit is:\n" +
                                String.format("%.2f", fahrenheitToCelsius(temperature)) + " Celsius\n" +
                                String.format("%.2f", fahrenheitToKelvin(temperature)) + " Kelvin");
                    } else if (unit.equals("Kelvin")) {
                        resultArea.setText(temperature + " Kelvin is:\n" +
                                String.format("%.2f", kelvinToCelsius(temperature)) + " Celsius\n" +
                                String.format("%.2f", kelvinToFahrenheit(temperature)) + " Fahrenheit");
                    }
                } catch (NumberFormatException ex) {
                    // Error handling: display error message if input is invalid
                    resultArea.setText("Please enter a valid number for the temperature.");
                }
            }
        });

        // Make the frame visible
        frame.setVisible(true);
    }
}
